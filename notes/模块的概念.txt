模块的概念
导入模块使用import，用require来导入模块包

在nodejs中，一个js文件中定义的变量，函数，都在这个文件内有效，当需要从该js文件外部引用这些变量，函数时候，需用exports对象进行暴露，使用者需用require()引入js文件。在使用的时候只需要一次，相当于引入顶层变量，所有的变量和函数，挂载这个顶层变量中。
foo.js
var s = 13;
var info = "我是提示信息";
exports.s = s;
exports.info = info; //向外暴露变量或者函数

test.js
var foo = require("./mod_test/foo"); //foo作为一个“顶部命名空间"
console.log(foo.s);
console.log(foo.info);

向外暴露一些类，可以把包构造成一个对象，然后导出来。
对一个类用module.exports = Person;//类名 在外部可以用new关键字来实例化一个对象

没有指定路径，是一个相对路径。
比如：var foo = require("foo");
现在当前的文件夹中查找，然后到父文件中查找，在项目的node_modules中查找，一直查找到根环境的node_modules中，逐级查找。

模块文件夹：
如果导入的是一个文件夹，就会默认去查找文件夹中的index.js，如果找不到就往外面找。（我们可以指定包的初始化文件，用package.json指定）。我们可以用npm init在bar文件中生成一个package.json文件。
{
  "name": "bar",
  "version": "1.0.0",
  "description": "this is test bar package",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "daheige",
  "license": "BSD"
}
通过用main指定包的初始化文件
使用方式：
//导入的是一个包
var bar = require("./bar");
console.log("包中的变量",bar.msg);





